apiVersion: apps/v1
kind: Deployment
metadata:
  name: mp-boilerplate-api-cs
  labels:
    app: mp-boilerplate-api-cs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mp-boilerplate-api-cs
  strategy:
    type: Recreate
  template:
    metadata:
      name: mp-boilerplate-api-cs
      labels:
        app: mp-boilerplate-api-cs
    spec:
      restartPolicy: Always
      volumes:
        - name: mp-boilerplate-api-credentials
          hostPath:
            path: /private/noon/credentials
      containers:
      - image: mp-boilerplate-api
        name: mp-boilerplate-api
        imagePullPolicy: IfNotPresent
        command: ["/src/bin/run.sh"]
        tty: true
        stdin: true
        envFrom:
        - configMapRef:
            name: config-com
        - configMapRef:
            name: mp-boilerplate-configmap
        volumeMounts:
          - name: mp-boilerplate-api-credentials
            mountPath: /credentials/
            readOnly: true
        env:
        - name: APPNAME
          value: "mp-boilerplate-api-cs"
      terminationGracePeriodSeconds: 1
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mp-boilerplate-api-cs
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/rewrite-target: "/"
spec:
  tls:
    - hosts:
        - mp-boilerplate-api-cs.noondv.com
  rules:
  - host: mp-boilerplate-api-cs.noondv.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mp-boilerplate-api-cs
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: mp-boilerplate-api-cs
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: mp-boilerplate-api-cs
